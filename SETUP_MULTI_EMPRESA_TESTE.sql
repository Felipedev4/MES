-- ============================================
-- SETUP PARA TESTE DO SISTEMA MULTI-EMPRESA
-- ============================================

-- 1. CRIAR EMPRESAS DE TESTE
-- ============================================

INSERT INTO companies (code, name, "tradeName", cnpj, address, phone, email, active, "createdAt", "updatedAt")
VALUES 
  ('EMP001', 'F√°brica Norte', 'Norte Pl√°sticos Ltda', '12.345.678/0001-90', 'Rua Norte, 100', '(11) 1234-5678', 'contato@norte.com', true, NOW(), NOW()),
  ('EMP002', 'F√°brica Sul', 'Sul Inje√ß√µes SA', '98.765.432/0001-10', 'Av. Sul, 200', '(21) 9876-5432', 'contato@sul.com', true, NOW(), NOW())
ON CONFLICT (code) DO NOTHING;

-- Resetar sequ√™ncia se necess√°rio
SELECT setval('companies_id_seq', (SELECT MAX(id) FROM companies));

-- ============================================
-- 2. VINCULAR USU√ÅRIO ADMIN A M√öLTIPLAS EMPRESAS
-- ============================================

-- Buscar ID do usu√°rio admin
DO $$
DECLARE
  admin_user_id INT;
  empresa_norte_id INT;
  empresa_sul_id INT;
BEGIN
  -- Buscar IDs
  SELECT id INTO admin_user_id FROM users WHERE email = 'admin@mes.com' LIMIT 1;
  SELECT id INTO empresa_norte_id FROM companies WHERE code = 'EMP001' LIMIT 1;
  SELECT id INTO empresa_sul_id FROM companies WHERE code = 'EMP002' LIMIT 1;
  
  -- Se usu√°rio admin existe, vincular √†s empresas
  IF admin_user_id IS NOT NULL AND empresa_norte_id IS NOT NULL AND empresa_sul_id IS NOT NULL THEN
    
    -- Empresa Norte (padr√£o)
    INSERT INTO user_companies ("userId", "companyId", "isDefault", "createdAt", "updatedAt")
    VALUES (admin_user_id, empresa_norte_id, true, NOW(), NOW())
    ON CONFLICT ("userId", "companyId") DO NOTHING;
    
    -- Empresa Sul
    INSERT INTO user_companies ("userId", "companyId", "isDefault", "createdAt", "updatedAt")
    VALUES (admin_user_id, empresa_sul_id, false, NOW(), NOW())
    ON CONFLICT ("userId", "companyId") DO NOTHING;
    
    RAISE NOTICE 'Usu√°rio admin vinculado √†s empresas com sucesso!';
  ELSE
    RAISE NOTICE 'Usu√°rio admin ou empresas n√£o encontrados!';
  END IF;
END $$;

-- ============================================
-- 3. CRIAR SETORES PARA AS EMPRESAS
-- ============================================

DO $$
DECLARE
  empresa_norte_id INT;
  empresa_sul_id INT;
BEGIN
  SELECT id INTO empresa_norte_id FROM companies WHERE code = 'EMP001' LIMIT 1;
  SELECT id INTO empresa_sul_id FROM companies WHERE code = 'EMP002' LIMIT 1;
  
  IF empresa_norte_id IS NOT NULL THEN
    INSERT INTO sectors ("companyId", code, name, description, active, "createdAt", "updatedAt")
    VALUES 
      (empresa_norte_id, 'INJECAO-N', 'Inje√ß√£o Norte', 'Setor de inje√ß√£o da f√°brica norte', true, NOW(), NOW()),
      (empresa_norte_id, 'MONTAGEM-N', 'Montagem Norte', 'Setor de montagem da f√°brica norte', true, NOW(), NOW())
    ON CONFLICT (code) DO NOTHING;
  END IF;
  
  IF empresa_sul_id IS NOT NULL THEN
    INSERT INTO sectors ("companyId", code, name, description, active, "createdAt", "updatedAt")
    VALUES 
      (empresa_sul_id, 'INJECAO-S', 'Inje√ß√£o Sul', 'Setor de inje√ß√£o da f√°brica sul', true, NOW(), NOW()),
      (empresa_sul_id, 'MONTAGEM-S', 'Montagem Sul', 'Setor de montagem da f√°brica sul', true, NOW(), NOW())
    ON CONFLICT (code) DO NOTHING;
  END IF;
END $$;

-- ============================================
-- 4. VERIFICAR SETUP
-- ============================================

-- Ver empresas criadas
SELECT 
  id,
  code,
  name AS "Nome",
  "tradeName" AS "Nome Fantasia",
  cnpj AS "CNPJ",
  active AS "Ativa"
FROM companies
ORDER BY id;

-- Ver v√≠nculos de usu√°rios com empresas
SELECT 
  u.id AS "User ID",
  u.name AS "Usu√°rio",
  u.email AS "Email",
  c.id AS "Company ID",
  c.code AS "C√≥digo Empresa",
  c.name AS "Nome Empresa",
  uc."isDefault" AS "Padr√£o"
FROM user_companies uc
JOIN users u ON uc."userId" = u.id
JOIN companies c ON uc."companyId" = c.id
ORDER BY u.id, uc."isDefault" DESC;

-- Ver setores por empresa
SELECT 
  s.id,
  c.code AS "C√≥digo Empresa",
  c.name AS "Nome Empresa",
  s.code AS "C√≥digo Setor",
  s.name AS "Nome Setor"
FROM sectors s
JOIN companies c ON s."companyId" = c.id
ORDER BY c.id, s.id;

-- ============================================
-- 5. MIGRAR DADOS EXISTENTES (OPCIONAL)
-- ============================================

-- Se voc√™ tem ordens de produ√ß√£o sem companyId,
-- pode associ√°-las a uma empresa padr√£o:

/*
UPDATE production_orders 
SET "companyId" = (SELECT id FROM companies WHERE code = 'EMP001' LIMIT 1)
WHERE "companyId" IS NULL;
*/

-- ============================================
-- 6. CRIAR USU√ÅRIO DE TESTE PARA CADA EMPRESA
-- ============================================

-- Usu√°rio apenas da Empresa Norte
DO $$
DECLARE
  user_norte_id INT;
  empresa_norte_id INT;
BEGIN
  -- Criar usu√°rio
  INSERT INTO users (email, password, name, role, active, "mustChangePassword", "createdAt", "updatedAt")
  VALUES ('operador.norte@mes.com', '$2b$10$YourHashedPasswordHere', 'Operador Norte', 'OPERATOR', true, false, NOW(), NOW())
  ON CONFLICT (email) DO NOTHING
  RETURNING id INTO user_norte_id;
  
  -- Se n√£o criou (j√° existe), buscar ID
  IF user_norte_id IS NULL THEN
    SELECT id INTO user_norte_id FROM users WHERE email = 'operador.norte@mes.com';
  END IF;
  
  -- Buscar empresa
  SELECT id INTO empresa_norte_id FROM companies WHERE code = 'EMP001' LIMIT 1;
  
  -- Vincular
  IF user_norte_id IS NOT NULL AND empresa_norte_id IS NOT NULL THEN
    INSERT INTO user_companies ("userId", "companyId", "isDefault", "createdAt", "updatedAt")
    VALUES (user_norte_id, empresa_norte_id, true, NOW(), NOW())
    ON CONFLICT ("userId", "companyId") DO NOTHING;
  END IF;
END $$;

-- Usu√°rio apenas da Empresa Sul
DO $$
DECLARE
  user_sul_id INT;
  empresa_sul_id INT;
BEGIN
  -- Criar usu√°rio
  INSERT INTO users (email, password, name, role, active, "mustChangePassword", "createdAt", "updatedAt")
  VALUES ('operador.sul@mes.com', '$2b$10$YourHashedPasswordHere', 'Operador Sul', 'OPERATOR', true, false, NOW(), NOW())
  ON CONFLICT (email) DO NOTHING
  RETURNING id INTO user_sul_id;
  
  -- Se n√£o criou (j√° existe), buscar ID
  IF user_sul_id IS NULL THEN
    SELECT id INTO user_sul_id FROM users WHERE email = 'operador.sul@mes.com';
  END IF;
  
  -- Buscar empresa
  SELECT id INTO empresa_sul_id FROM companies WHERE code = 'EMP002' LIMIT 1;
  
  -- Vincular
  IF user_sul_id IS NOT NULL AND empresa_sul_id IS NOT NULL THEN
    INSERT INTO user_companies ("userId", "companyId", "isDefault", "createdAt", "updatedAt")
    VALUES (user_sul_id, empresa_sul_id, true, NOW(), NOW())
    ON CONFLICT ("userId", "companyId") DO NOTHING;
  END IF;
END $$;

-- ============================================
-- ‚úÖ SETUP COMPLETO!
-- ============================================

-- Resumo:
SELECT '‚úÖ Setup multi-empresa completo!' AS "Status";

SELECT 
  'Empresas criadas: ' || COUNT(*) AS "Resumo"
FROM companies WHERE active = true;

SELECT 
  'V√≠nculos de usu√°rios: ' || COUNT(*) AS "Resumo"
FROM user_companies;

SELECT 
  'Setores criados: ' || COUNT(*) AS "Resumo"
FROM sectors WHERE active = true;

-- ============================================
-- üìù CREDENCIAIS PARA TESTE
-- ============================================

/*
Admin (2 empresas):
  Email: admin@mes.com
  Senha: admin123
  Empresas: Norte e Sul

Operador Norte (1 empresa):
  Email: operador.norte@mes.com
  Senha: (definir no backend com hash)
  Empresa: Norte

Operador Sul (1 empresa):
  Email: operador.sul@mes.com
  Senha: (definir no backend com hash)
  Empresa: Sul
*/

